{"ast":null,"code":"import _withState from 'recompose/withState';\nimport _withPropsOnChange from 'recompose/withPropsOnChange';\nimport _withProps from 'recompose/withProps';\nimport _compose from 'recompose/compose';\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport { withDefaultProps } from './';\nimport { sanitizeDate, withImmutableProps } from '../utils';\nimport enhanceHeader from '../Header/withMultipleDates';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse'; // Enhance Day component to display selected state based on an array of selected dates\n\nexport var enhanceDay = _withPropsOnChange(['selected'], function (props) {\n  return {\n    isSelected: props.selected.indexOf(props.date) !== -1\n  };\n}); // Enhance year component\n\nvar enhanceYears = _withProps(function (_ref) {\n  var displayDate = _ref.displayDate;\n  return {\n    selected: displayDate ? parse(displayDate) : null\n  };\n}); // Enhancer to handle selecting and displaying multiple dates\n\n\nvar withMultipleDates = _compose(withDefaultProps, _withState('scrollDate', 'setScrollDate', getInitialDate), _withState('displayDate', 'setDisplayDate', getInitialDate), withImmutableProps(function (_ref2) {\n  var DayComponent = _ref2.DayComponent,\n      HeaderComponent = _ref2.HeaderComponent,\n      YearsComponent = _ref2.YearsComponent;\n  return {\n    DayComponent: enhanceDay(DayComponent),\n    HeaderComponent: enhanceHeader(HeaderComponent),\n    YearsComponent: enhanceYears(YearsComponent)\n  };\n}), _withProps(function (_ref3) {\n  var displayDate = _ref3.displayDate,\n      onSelect = _ref3.onSelect,\n      setDisplayDate = _ref3.setDisplayDate,\n      scrollToDate = _ref3.scrollToDate,\n      props = _objectWithoutProperties(_ref3, ['displayDate', 'onSelect', 'setDisplayDate', 'scrollToDate']);\n\n  return {\n    passThrough: {\n      Day: {\n        onClick: function onClick(date) {\n          return handleSelect(date, {\n            onSelect: onSelect,\n            setDisplayDate: setDisplayDate\n          });\n        }\n      },\n      Header: {\n        setDisplayDate: setDisplayDate\n      },\n      Years: {\n        displayDate: displayDate,\n        onSelect: function onSelect(year, e, callback) {\n          return handleYearSelect(year, callback);\n        },\n        selected: displayDate\n      }\n    },\n    selected: props.selected.filter(function (date) {\n      return sanitizeDate(date, props);\n    }).map(function (date) {\n      return format(date, 'YYYY-MM-DD');\n    })\n  };\n}));\n\nexport { withMultipleDates };\n\nfunction handleSelect(date, _ref4) {\n  var onSelect = _ref4.onSelect,\n      setDisplayDate = _ref4.setDisplayDate;\n  onSelect(date);\n  setDisplayDate(date);\n}\n\nfunction handleYearSelect(date, callback) {\n  callback(parse(date));\n}\n\nfunction getInitialDate(_ref5) {\n  var selected = _ref5.selected;\n  return selected.length ? selected[0] : new Date();\n}\n\nexport function defaultMultipleDateInterpolation(date, selected) {\n  var selectedMap = selected.map(function (date) {\n    return format(date, 'YYYY-MM-DD');\n  });\n  var index = selectedMap.indexOf(format(date, 'YYYY-MM-DD'));\n  return index === -1 ? [].concat(selected, [date]) : [].concat(selected.slice(0, index), selected.slice(index + 1));\n}","map":{"version":3,"sources":["E:/react app/my-app/node_modules/react-infinite-calendar/es/Calendar/withMultipleDates.js"],"names":["_withState","_withPropsOnChange","_withProps","_compose","_objectWithoutProperties","obj","keys","target","i","indexOf","Object","prototype","hasOwnProperty","call","withDefaultProps","sanitizeDate","withImmutableProps","enhanceHeader","format","parse","enhanceDay","props","isSelected","selected","date","enhanceYears","_ref","displayDate","withMultipleDates","getInitialDate","_ref2","DayComponent","HeaderComponent","YearsComponent","_ref3","onSelect","setDisplayDate","scrollToDate","passThrough","Day","onClick","handleSelect","Header","Years","year","e","callback","handleYearSelect","filter","map","_ref4","_ref5","length","Date","defaultMultipleDateInterpolation","selectedMap","index","concat","slice"],"mappings":"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","sourcesContent":["import _withState from 'recompose/withState';\nimport _withPropsOnChange from 'recompose/withPropsOnChange';\nimport _withProps from 'recompose/withProps';\nimport _compose from 'recompose/compose';\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport { withDefaultProps } from './';\nimport { sanitizeDate, withImmutableProps } from '../utils';\nimport enhanceHeader from '../Header/withMultipleDates';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\n\n// Enhance Day component to display selected state based on an array of selected dates\nexport var enhanceDay = _withPropsOnChange(['selected'], function (props) {\n  return {\n    isSelected: props.selected.indexOf(props.date) !== -1\n  };\n});\n\n// Enhance year component\nvar enhanceYears = _withProps(function (_ref) {\n  var displayDate = _ref.displayDate;\n  return {\n    selected: displayDate ? parse(displayDate) : null\n  };\n});\n\n// Enhancer to handle selecting and displaying multiple dates\nvar withMultipleDates = _compose(withDefaultProps, _withState('scrollDate', 'setScrollDate', getInitialDate), _withState('displayDate', 'setDisplayDate', getInitialDate), withImmutableProps(function (_ref2) {\n  var DayComponent = _ref2.DayComponent,\n      HeaderComponent = _ref2.HeaderComponent,\n      YearsComponent = _ref2.YearsComponent;\n  return {\n    DayComponent: enhanceDay(DayComponent),\n    HeaderComponent: enhanceHeader(HeaderComponent),\n    YearsComponent: enhanceYears(YearsComponent)\n  };\n}), _withProps(function (_ref3) {\n  var displayDate = _ref3.displayDate,\n      onSelect = _ref3.onSelect,\n      setDisplayDate = _ref3.setDisplayDate,\n      scrollToDate = _ref3.scrollToDate,\n      props = _objectWithoutProperties(_ref3, ['displayDate', 'onSelect', 'setDisplayDate', 'scrollToDate']);\n\n  return {\n    passThrough: {\n      Day: {\n        onClick: function onClick(date) {\n          return handleSelect(date, { onSelect: onSelect, setDisplayDate: setDisplayDate });\n        }\n      },\n      Header: {\n        setDisplayDate: setDisplayDate\n      },\n      Years: {\n        displayDate: displayDate,\n        onSelect: function onSelect(year, e, callback) {\n          return handleYearSelect(year, callback);\n        },\n        selected: displayDate\n      }\n    },\n    selected: props.selected.filter(function (date) {\n      return sanitizeDate(date, props);\n    }).map(function (date) {\n      return format(date, 'YYYY-MM-DD');\n    })\n  };\n}));\n\nexport { withMultipleDates };\nfunction handleSelect(date, _ref4) {\n  var onSelect = _ref4.onSelect,\n      setDisplayDate = _ref4.setDisplayDate;\n\n  onSelect(date);\n  setDisplayDate(date);\n}\n\nfunction handleYearSelect(date, callback) {\n  callback(parse(date));\n}\n\nfunction getInitialDate(_ref5) {\n  var selected = _ref5.selected;\n\n  return selected.length ? selected[0] : new Date();\n}\n\nexport function defaultMultipleDateInterpolation(date, selected) {\n  var selectedMap = selected.map(function (date) {\n    return format(date, 'YYYY-MM-DD');\n  });\n  var index = selectedMap.indexOf(format(date, 'YYYY-MM-DD'));\n\n  return index === -1 ? [].concat(selected, [date]) : [].concat(selected.slice(0, index), selected.slice(index + 1));\n}"]},"metadata":{},"sourceType":"module"}